{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Resource",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the resource.",
      "pattern": "^[-a-zA-Z0-9]+$"
    },
    "owner": {
      "type": "string",
      "description": "Optional name of the user or group who will own the resource. The field is ignored if the recipe is used to clone a new resource."
    },
    "description": {
      "type": "string",
      "description": "Details about the resource, to help distinguish them."
    },
    "image_uri": {
      "type": "string",
      "description": "The URI of the image to use with the resource. The image must exist in the particular Saturn Cloud installation for the resource to work (either Hosted or a particular Enterprise installation)"
    },
    "image": {
      "type": "object",
      "description": "[FUTURE RELEASE] The image to use with the resource. The image must exist in the particular Saturn Cloud installation for the resource to work (either Hosted or a particular Enterprise installation)",
      "properties": {
        "owner": {
          "type": "string",
          "description": "The owner of the image."
        },
        "name": {
          "type": "string",
          "description": "The name of the image.",
          "pattern": "^[-a-zA-Z0-9]+$"
        },
        "version": {
          "type": "string",
          "description": "The version of the image.",
          "pattern": "^[-a-zA-Z0-9]+$"
        }
      },
      "additionalProperties": false,
      "required": [
        "owner",
        "name",
        "version"
      ]
    },
    "working_directory": {
      "type": "string",
      "description": "Location to use to run commands.",
      "default": "/home/jovyan/workspace"
    },
    "extra_packages": {
      "type": "object",
      "description": "extra packages to install. Not all of these may exist depending on the resource type and if they are needed",
      "properties": {
        "conda": {
          "type": "object",
          "description": "Packages to install from conda",
          "properties": {
            "install": {
              "type": "string",
              "description": "Packages to install from conda. This will be appended to `conda install `, so each package should be separated by a space."
            },
            "use_mamba": {
              "type": "boolean",
              "description": "Whether to use mamba when installing via conda. Replaces the command with `mamba install`",
              "default": "true"
            }
          },
          "required": ["install"],
          "additionalProperties": false
        },
        "pip": {
          "type": "object",
          "description": "Packages to install from pip",
          "properties": {
            "install": {
              "type": "string",
              "description": "Packages to install from pip. This will be appended to `pip install `, so each package should be separated by a space."
            }
          },
          "required": ["install"],
          "additionalProperties": false
        },
        "apt": {
          "type": "object",
          "description": "Packages to install from apt",
          "properties": {
            "install": {
              "type": "string",
              "description": "Packages to install from apt. This will be appended to `apt-get install `, so each package should be separated by a space."
            }
          },
          "required": ["install"],
          "additionalProperties": false
        },
        "cran": {
          "type": "object",
          "description": "List of packages to install from CRAN (RStudio Server only).",
          "properties": {
            "install": {
              "type": "string",
              "description": "Packages to install from CRAN. These should be separated by a space--Saturn Cloud will be convert into an R vector.",
              "examples": ["tidytext odbc"]
            },
            "repo": {
              "type": "string",
              "description": "[FUTURE RELEASE] URL of a CRAN mirror to use with the repo. If not specified defaults to the result of `getOption(\"repos\")` run on the image."
            }
          },
          "required": ["install"],
          "additionalProperties": false
        },
        "remotes": {
          "type": "string",
          "description": "List of packages to install from GitHub or other remotes, each separated by a space (RStudio Server only)",
          "properties": {
            "install": {
              "type": "string",
              "description": "Packages to install from the remote location. These should be separated by a space.",
              "examples": ["rstudio/tensorflow r-lib/r-oxygen2"]
            },
            "remote": {
              "type": "string",
              "description": "[FUTURE RELEASE] Location to pull the remote from. Currently only supports github",
              "enum": [
                "github",
                "gitlab",
                "url",
                "git"
              ],
              "default": "github"
            }
          },
          "required": ["install"],
          "additionalProperties": false
        },
        "bioconductor": {
          "type": "object",
          "description": "List of packages to install from Bioconductor (RStudio Server only)",
          "properties": {
            "install": {
              "type": "string",
              "description": "Packages to install, each separated by a space.",
              "examples": ["BiocGenerics BiocVersion"]
            }
          },
          "required": ["install"],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "start_script": {
      "type": "string",
      "description": "Code to run every time a server is created. Runs from the working_directory so any external script that it references should be relative to that."
    },
    "dask_cluster": {
      "type": "object",
      "description": "Details about the attached Dask cluster.",
      "properties": {
        "num_workers": {
          "type": "integer",
          "description": "The number of worker machines in the Dask cluster",
          "minimum": 1
        },
        "scheduler": {
          "instance_type": { "$ref": "#/$defs/instance_type" }
        },
        "worker": {
          "type": "object",
          "description": "Options related to the workers.",
          "properties": {
            "instance_type": { "$ref": "#/$defs/instance_type" },
            "use_spot_instances": {
              "type": "boolean",
              "description": "Whether the Dask cluster should use spot instances",
              "default": false
            },
            "num_processes": {
              "type": "integer",
              "description": "The number of worker processes. If not specified, this defaults to either 1 on CPU workers or the number of GPUs on GPU workers",
              "minimum": 1
            },
            "num_threads": {
              "type": "integer",
              "description": "The number of worker threads. If not specified this optimally chosen by Saturn Cloud",
              "minimum": 1
            }
          },
          "additionalProperties": false,
          "required": [
            "instance_type"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "scheduler",
        "worker",
        "num_workers"
      ]
    },
    "jupyter_server": {
      "instance_type": { "$ref": "#/$defs/instance_type" },
      "start_ssh": { "$ref": "#/$defs/start_ssh" },
      "disk_space": { "$ref": "#/$defs/disk_space" },
      "auto_shutoff": { "$ref": "#/$defs/auto_shutoff" },
      "use_spot_instance": { "$ref": "#/$defs/use_spot_instance" }
    },
    "rstudio_server": {
      "instance_type": { "$ref": "#/$defs/instance_type" },
      "start_ssh": { "$ref": "#/$defs/start_ssh" },
      "disk_space": { "$ref": "#/$defs/disk_space" },
      "auto_shutoff": { "$ref": "#/$defs/auto_shutoff" }
    },
    "job": {
      "type": "object",
      "properties": {
        "instance_type": { "$ref": "#/$defs/instance_type" },
        "command": { "$ref": "#/$defs/command" },
        "schedule": { "$ref": "#/$defs/schedule" },
        "backoff_limit": {
          "type": "integer",
          "description": "Number of retries before considering a Job as failed.",
          "minimum": 1,
          "default": 3
        },
        "concurrency_policy": {
          "type": "string",
          "description": "How to treat concurrent executions of a Job.",
          "enum": [
            "Allow",
            "Forbid",
            "Replace"
          ],
          "default": "Allow"
        }
      },
      "additionalProperties": false,
      "required": ["instance_type", "command"]
    },
    "deployment": {
      "type": "object",
      "properties": {
        "instance_type": { "$ref": "#/$defs/instance_type" },
        "command": { "$ref": "#/$defs/command" },
        "instance_count": {
          "type": "integer",
          "description": "How many instance to run at the same time.",
          "default": 1
        },
        "public": {
          "type": "boolean",
          "description": "Whether to allow unauthenticated access to the deployment.",
          "default": "false"
        }
      },
      "additionalProperties": false,
      "required": ["instance_type", "command"]
    },
    "environment_variables": {
      "type": "object",
      "description": "Environmental variables to include with the object. Each key-value pair must be the name of the variable and the value (both strings)",
      "additionalProperties": {"type": "string"}
    },
    "git_repositories": {
      "type": "array",
      "description": "List of git repos to include with the resource",
      "items": [
        {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "The URL of the git repo. HTTPS or git urls are both valid."
            },
            "path": {
              "type": "string",
              "description": "Where to clone the git repo to."
            },
            "public": {
              "type": "boolean",
              "description": "Whether git repository is public. If the repository is private then the user will need to set up git credentials.",
              "default": "true"
            },
            "on_restart": {
              "type": "string",
              "description": "What behavior to take when the resource restarts - reclone the repository, or preserve local changes",
              "enum": [
                "preserve changes",
                "reclone"
              ],
              "default": "preserve changes"
            },
            "reference_type": {
              "type": "string",
              "description": "What type of reference to use when cloning (a commit, a branch, or a tag)",
              "enum": [
                "commit",
                "branch",
                "tag"
              ],
              "default": "branch"
            },
            "reference": {
              "type": ["string", "null"],
              "description": "The actual value of the reference (i.e. the particular name of the commit, branch, or tag)"
            }
          },
          "additionalProperties": false,
          "required": [
            "url"
          ]
        }
      ]
    },
    "shared_folders": {
      "type": "array",
      "description": "[FUTURE RELEASE] List of shared folders to include with the resource (only valid for Jupyter Servers and RStudio Servers). These shared folders must already exist in Saturn.",
      "items": [
        {
          "type": "object",
          "properties": {
            "owner": {
              "type": "string",
              "description": "Owner of the shared folder."
            },
            "name": {
              "type": "string",
              "description": "Name of the shared folder."
            },
            "path": {
              "type": "string",
              "description": "Where to mount this shared folder. Defaults to '/home/jovyan/shared/<owner>/<name>'"
            }
          },
          "additionalProperties": false,
          "required": [
            "owner",
            "name"
          ]
        }
      ]
    },
    "credentials": {
      "type": "array",
      "description": "[FUTURE RELEASE], List of the secret credentials that the resource requires. These are not the actual credentials themselves, just references to what the user needs.",
      "items": [
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the credential so the user knows what to include"
            },
            "type": {
              "type": "string",
              "description": "specify whether it is an environment variable or a file",
              "enum": ["environment_variable","file"]
            },
            "location": {
              "type": "string",
              "description": "for an environment_variable, the name of the variable. For a file, the path to the file on the system"
            }
          },
          "additionalProperties": false,
          "required": [
            "name",
            "type",
            "location"
          ]
        }
      ]
    },
    "schema_version": {
      "const": "2022.01.06",
      "description": "The version of the recipe schema used. Typically the same as the Saturn Cloud version used when creating the recipe."
    },
    "visibility": {
      "type": "string",
      "description": "Who should be allowed to clone the resource.",
      "default": "owner",
      "enum": [
        "owner",
        "org"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "name",
    "schema_version"
  ],
  "oneOf": [
    {
      "type": "object",
      "required": ["image"]
    },
    {
      "type": "object",
      "required": ["image_uri"]
    }
  ],
  "anyOf": [
    {"required": ["jupyter_server"]},
    {"required": ["rstudio_server"]},
    {"required": ["job"]},
    {"required": ["deployment"]}
  ],
  "$defs": {
    "instance_type": {
      "type": "string",
      "description": "The instance size to deploy on. Must be a name from http://saturncloud.io/static/constants.yaml"
    },
    "start_ssh": {
      "type": "boolean",
      "description": "Should SSH connections to the server be allowed? (Resource types: jupyter_server and rstudio_server)",
      "default": false
    },
    "disk_space": {
      "type": "string",
      "description": "The amount of disk space to include with the server. Must be a string Saturn Cloud allows. (Resource types: jupyter_server and rstudio_server)"
    },
    "auto_shutoff": {
      "type": "string",
      "description": "The amount of time before the server shuts off. Must be a string Saturn Cloud allows. (Resource types: jupyter_server and rstudio_server)",
      "default": "1 hour"
    },
    "use_spot_instance": {
      "type": "boolean",
      "description": "Whether the server should use a spot instance",
      "default": false
    },
    "schedule": {
      "type": ["string", "null"],
      "description": "If included, a job will run on this Kubernetes CRON schedule. If is a job and not included, job will run on command only (Resource types: job only)"
    },
    "command": {
      "type": "string",
      "description": "Command used to run job/deployment. (Resource types: job and deployment)"
    }
  }
}
